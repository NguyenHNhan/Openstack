
apt install mariadb-server
systemctl enable mariadb
systemctl start mariadb
NEWPASSDB="123"
echo -e "$NEWPASSDB\n$NEWPASSDB\ny\ny\ny\ny\n" | sudo mysql_secure_installation

apt -y install rabbitmq-server memcached python3-pymysql 
////
rabbitmqctl add_user openstack 123
#rabbitmqctl change_password openstack 123

rabbitmqctl set_permissions openstack ".*" ".*" ".*" 

wget -O /etc/mysql/mariadb.conf.d/50-server.cnf https://github.com/NguyenHNhan/Openstack/raw/main/conf/50-server.cnf

wget -O /etc/memcached.conf https://raw.githubusercontent.com/NguyenHNhan/Openstack/76fcfc7185a1737fac4f5537ff1f281971eda187/conf/memcached.conf

apt -y install keystone python3-openstackclient apache2 libapache2-mod-wsgi-py3 python3-oauth2client 

PASSDB="123"
SQL_COMMANDS="
DROP DATABASE IF EXISTS keystone;
CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO stackdb@'localhost' IDENTIFIED BY '$PASSDB';
GRANT ALL PRIVILEGES ON keystone.* TO stackdb@'%' IDENTIFIED BY '$PASSDB';
FLUSH PRIVILEGES;
"
mysql <<< "$SQL_COMMANDS"
//cau hinh keystone
wget -O /etc/keystone/keystone.conf https://raw.githubusercontent.com/NguyenHNhan/Openstack/e235a9344ea8f45433fffb42bdd091b6515d4e58/conf/keystone.conf

su -s /bin/bash keystone -c "keystone-manage db_sync" 
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone 
keystone-manage credential_setup --keystone-user keystone --keystone-group keystone 
keystone-manage bootstrap --bootstrap-password 123 \
--bootstrap-admin-url https://controller:5000/v3/ \
--bootstrap-internal-url https://controller:5000/v3/ \
--bootstrap-public-url https://controller:5000/v3/ \
--bootstrap-region-id RegionOne

wget -O /etc/apache2/apache2.conf https://raw.githubusercontent.com/NguyenHNhan/Openstack/828e2dddcfd828954ba67560eec6ab85a061531c/conf/apache2.conf

a2enmod wsgi

systemctl restart apache2 

wget -O /etc/apache2/sites-available/keystone.conf https://raw.githubusercontent.com/NguyenHNhan/Openstack/406e3892a6ad044c7755d33d89e5af15995152bb/conf/sites-available/keystone.conf

export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=123
export OS_AUTH_URL=https://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=3
#nova-api
apt-get install nova-api
systemctl restart nova-api
systemctl enable nova-api
#glancle
openstack user create --domain default --project service --password 123 glance 
openstack role add --project service --user glance admin 
openstack service create --name glance --description "OpenStack Image service" image
 openstack endpoint create --region RegionOne image public http://controller:9292

SQL_COMMANDS="
DROP DATABASE IF EXISTS glance;
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO stackdb@'localhost' IDENTIFIED BY '$PASSDB';
GRANT ALL PRIVILEGES ON glance.* TO stackdb@'%' IDENTIFIED BY '$PASSDB';
FLUSH PRIVILEGES;
"
mysql <<< "$SQL_COMMANDS"

sudo apt-get install glance
wget -O /etc/glance/glance-api.conf https://raw.githubusercontent.com/NguyenHNhan/Openstack/a9270b524a9610e164dbb3e8bc7b4f2c45b62c90/conf/glance-api.conf
chmod 640 /etc/glance/glance-api.conf 
chown root:glance /etc/glance/glance-api.conf 
su -s /bin/bash glance -c "glance-manage db_sync" 
systemctl restart glance-api 
systemctl enable glance-api 

#nova and placement 
openstack user create --domain default --project service --password 123 nova 
openstack role add --project service --user nova admin 
openstack user create --domain default --project service --password 123 placement 
openstack role add --project service --user placement admin 
openstack service create --name nova --description "OpenStack Compute service" compute 
openstack service create --name placement --description "OpenStack Compute Placement service" placement 
openstack endpoint create --region RegionOne compute public http://controller:8774/v2.1/%\(tenant_id\)s 
openstack endpoint create --region RegionOne placement public http://controller:8778 

PASSDB="123"

SQL_COMMANDS="
DROP DATABASE IF EXISTS nova;
CREATE DATABASE nova;
GRANT ALL PRIVILEGES ON nova.* TO stackdb@'localhost' IDENTIFIED BY '$PASSDB';
GRANT ALL PRIVILEGES ON nova.* TO stackdb@'%' IDENTIFIED BY '$PASSDB';
CREATE DATABASE placement;
GRANT ALL PRIVILEGES ON placement.* TO stackdb@'localhost' IDENTIFIED BY '$PASSDB';
GRANT ALL PRIVILEGES ON placement.* TO stackdb@'%' IDENTIFIED BY '$PASSDB';
FLUSH PRIVILEGES;
"
mysql <<< "$SQL_COMMANDS"

apt -y install nova-api nova-conductor nova-scheduler nova-novncproxy placement-api python3-novaclient 
""
wget -O /etc/nova/nova.conf https://raw.githubusercontent.com/NguyenHNhan/Openstack/10ad03ca34570d577d73ba9f22e46beb4da50247/conf/nova.conf

 chmod 640 /etc/nova/nova.conf 
 chgrp nova /etc/nova/nova.conf 
wget -O /etc/placement/placement.conf https://raw.githubusercontent.com/NguyenHNhan/Openstack/8040c5fe646b79aea9b1f0dc63d7add5649d0d16/conf/placement.conf

#horizon
apt -y install openstack-dashboard 


